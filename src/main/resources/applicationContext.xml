<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <!-- 配置需要被Spring管理的Bean（创建，创建后放在了Spring IOC容器里面）-->

    <context:property-placeholder location="classpath:jdbc.properties"  system-properties-mode="NEVER" />

    <!--数据库链接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池   -->
        <property name="driverClass" value="${driver}" />
        <property name="jdbcUrl" value="${url}" />
        <property name="user" value="${username}" />
        <property name="password" value="${password}" />
        <!--c3p0连接池私有属性-->
        <property name="maxPoolSize" value="30"></property> <!--每个数据库连接池最大的数量-->
        <property name="minPoolSize" value="10"></property>
        <!-- 关闭连接后不自动commit -->
        <!--当 AutoCommit = False 时,将你修改后的数据提交到数据库
        你update或insert后并没有将数据写入数据库-->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="1000"/>
        <!-- 获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!-- 配置Hibernate的相关属性,与数据库链接相关的 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置 hibernate属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!-- 加载hibernate中的映射文件,源代码中是以数组的形式来写的，所以这里用list标签 -->
        <property name="mappingResources" >
            <list>
                <value>org/select/entity/User.hbm.xml</value>
                <value>org/select/entity/Course.hbm.xml</value>
             </list>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="userDao" class="org.select.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="courseDao" class="org.select.dao.impl.CourseDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>


    <bean id="userService" class="org.select.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <bean id="courseService" class="org.select.service.impl.CourseServiceImpl">
        <property name="courseDao" ref="courseDao"></property>
    </bean>

    <bean id="courseAction" class="org.select.action.CourseAction">
        <property name="courseService" ref="courseService"></property>
    </bean>
    <!--<bean id="userDao" class="org.ssh.dao.impl.EmployeeDaoImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
    <!--<bean id="departmentDao" class="org.ssh.dao.impl.DepartmentDaoImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
    <!--<bean id="employeeService" class="org.ssh.service.impl.EmployeeServiceImpl">-->
        <!--<property name="employeeDao" ref="employeeDao" />-->
    <!--</bean>-->
    <!--<bean id="departmentService" class="org.ssh.service.impl.DepartmentServiceImpl">-->
        <!--<property name="departmentDao" ref="departmentDao" />-->
    <!--</bean>-->
    <!--<bean id="employeeAction" class="org.ssh.action.EmployeeAction" scope="prototype">-->
        <!--<property name="employeeService" ref="employeeService" />-->
    <!--</bean>-->
    <!--<bean id="departmentAction" class="org.ssh.action.DepartmentAction" scope="prototype">-->
        <!--<property name="departmentService" ref="departmentService" />-->
    <!--</bean>-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
